/************************************************/
/************* FULL CALENDAR CONFIGURATION **********/
/************************************************/

        $(document).ready(function () {
            $('.navigation-main li a').click(function () {
                $(this).parent('has-sub').addClass('open');
            });
            var calendar = $('#calendar').fullCalendar({
                editable: false,
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                events: function (start, end, timezone, callback) {
                    $.ajax({
                        url: '/Crm_TacheReclamation/listeTacheCalendar',
                        type: "GET",
                        dataType: "JSON",
                        data: {
                            UtilisateurCreateur: UserID
                        },
                        success: function (result) {
                            var events = [];

                            resultes = JSON.parse(result);
                            /* console.log(resultes);*/
                            /*for(var i=0; i<resultes.length; i++){
                            console.log(resultes[i]);
                            }*/



                            $.each(resultes, function (i, data) {

                                console.log(data.DateCreation);
                                events.push(
                                    {
                                        title: data.TacheTitre,
                                        description: data.DescriptionTache,
                                        start: moment(data.DateCreation).format('YYYY-MM-DD hh:mm:ss'),
                                        end: moment(data.DatePrevus).format('YYYY-MM-DD hh:mm:ss'),
                                        backgroundColor: "#3a3a3a",
                                        borderColor: "#ffffff"
                                    });
                            });

                            callback(events);
                        }
                    });
                },
                selectable: false,
                selectHelper: false,

                editable: false,
                eventResize: function (event) {
                    var start = $.fullCalendar.formatDate(event.start, "Y-MM-DD HH:mm:ss");
                    var end = $.fullCalendar.formatDate(event.end, "Y-MM-DD HH:mm:ss");
                    var title = event.title;
                    var id = event.id;
                    $.ajax({
                        url: "Crm_TacheReclamation/listeTacheCalendar",
                        type: "POST",
                        data: { title: title, start: start, end: end, id: id },
                        success: function () {
                            calendar.fullCalendar('refetchEvents');
                            alert('Event Update');
                        }
                    })
                },



            });
        });


/************************************************/
/************* DATATABLE CONFIGURATION **********/
/************************************************/

        $(document).ready(function () {
            $('.fc-icon-left-single-arrow').addClass("la la-angle-left");
            $('.fc-icon-left-single-arrow').removeClass("fc-icon fc-icon-left-single-arrow");
            $('.fc-icon-right-single-arrow').addClass("la la-angle-right");
            $('.fc-icon-right-single-arrow').removeClass("fc-icon fc-icon-right-single-arrow");

if($('.table').length){

 $('.table thead tr')
                .clone(true)
                .addClass('filters')
                .appendTo('.table thead');
            $(".table").DataTable({
                orderCellsTop: true,

                initComplete: function () {
                    var api = this.api();

                    // For each column
                    api
                        .columns()
                        .eq(0)
                        .each(function (colIdx) {
                            // Set the header cell to contain the input element
                            var cell = $('.filters th').eq(
                                $(api.column(colIdx).header()).index()
                            );
                            var title = $(cell).text();
                            $(cell).html('<input type="text" class="form-control form-control-sm"  />');

                            // On every keypress in this input
                            $(
                                'input',
                                $('.filters th').eq($(api.column(colIdx).header()).index())
                            )
                                .off('keyup change')
                                .on('keyup change', function (e) {
                                    e.stopPropagation();

                                    // Get the search value
                                    $(this).attr('title', $(this).val());
                                    var regexr = '({search})'; //$(this).parents('th').find('select').val();

                                    var cursorPosition = this.selectionStart;
                                    // Search the column for that value
                                    api
                                        .column(colIdx)
                                        .search(
                                            this.value != ''
                                                ? regexr.replace('{search}', '(((' + this.value + ')))')
                                                : '',
                                            this.value != '',
                                            this.value == ''
                                        )
                                        .draw();

                                    $(this)
                                        .focus()[0]
                                        .setSelectionRange(cursorPosition, cursorPosition);
                                });
                        });
                },
                aLengthMenu: [
                    [25, 50, 100, 200, -1],
                    [25, 50, 100, 200, "All"]
                ],
                iDisplayLength: -1,
                responsive: true,
                scrollY: "450px",
                scrollCollapse: true,
                language: {
                    processing: "Traitement en cours...",
                    search: "Rechercher&nbsp;:",
                    lengthMenu: "Afficher _MENU_ &eacute;l&eacute;ments",
                    info: "Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
                    infoEmpty: "Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments",
                    infoFiltered: "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
                    infoPostFix: "",
                    loadingRecords: "Chargement en cours...",
                    zeroRecords: "Aucun &eacute;l&eacute;ment &agrave; afficher",
                    emptyTable: "Aucune donnée disponible dans le tableau",
                    paginate: {
                        first: "Premier",
                        previous: "Pr&eacute;c&eacute;dent",
                        next: "Suivant",
                        last: "Dernier"
                    },
                    aria: {
                        sortAscending: ": activer pour trier la colonne par ordre croissant",
                        sortDescending: ": activer pour trier la colonne par ordre décroissant"
                    }
                },
                scrollX: "500",
                order: [[0, "desc"]]
            });


}
           
            if ($(".col-sm-12 #DescriptionTache").length > 0) {
                CKEDITOR.replace("DescriptionTache");
            } if ($("#DescriptionGeneral").length > 0) {
                CKEDITOR.replace("DescriptionGeneral");
            } if ($("#Description").length > 0) {
                CKEDITOR.replace("Description");
            } if ($("#DescriptionRapport").length > 0) {
                CKEDITOR.replace("DescriptionRapport");
            }

            $('.collapse')
                .on('shown.bs.collapse', function () {
                    $(this)
                        .parent().parent()
                        .find(".la-filter")
                        .removeClass("la-filter")
                        .addClass("la-close");
                })
                .on('hidden.bs.collapse', function () {
                    $(this)
                        .parent().parent()
                        .find(".la-close")
                        .removeClass("la-close")
                        .addClass("la-filter");
                });


        });


/**********************************************************/
/************** STATISTIQUE DASHBOARD *********************/
/**********************************************************/
//DateCreation: $("#d1").val().slice(0, -9),
 //DateCreationFin: $("#d2").val().slice(0, -9),
dataReclamation = {
    CodeRespensable: codeResponsable,
    NomPlanificateur: "",
    CodeClient: "",
    NomValidateur: "",
    DateCreation: "01/01/2022",
    DateCreationFin: "31/12/2022",
    NomTesteur: "",
    UtilisateurCreateur: userName, // session connecter
    DescriptionTache: "",
    Type: userRole,
};
ajaxResult = [];
$.ajax({
    method: "POST",
    async: false,
    contentType: 'application/json',
    dataType: 'json',
    url: "/Crm_TacheReclamation/listeTache",
    data: JSON.stringify(dataReclamation)
})
    .done(function (msg) {
        var array = JSON.parse(msg).sort();
        var i = 0;
        var j = 1;
result = array.reduce((r, { DateCreation }) => {
        var key = DateCreation.slice(5, -12);

        r[key] = (r[key] || 0) + 1;

        return r;

    }, {});

//console.log(array);
       
    });

$(function () {
    "use strict";
const monthNames = ["", "Jan", "Feb", "Mar", "Apr", "May", "Jun","Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    // AREA CHART
if ( $("#myfirstchart").length){
        
var area = Morris.Area({
        element: 'myfirstchart',
        data: [
            {y: 1, a: result["01"]},
            {y: 2, a: result["02"]},
            {y: 3, a: result["03"]},
            {y: 4, a: result["04"]},
            {y: 5, a: result["05"]},
            {y: 6, a: result["06"]},
            {y: 7, a: result["07"]},
            {y: 8, a: result["08"]},
            {y: 9, a: result["09"]},
            {y: 10, a: result["10"]},
            {y: 11, a: result["11"]},
            {y: 12, a: result["12"]},
        ],
        xkey: 'y',
        parseTime: false,
        ykeys: ['a'],
        xLabelFormat: function (x) {
            var index = parseInt(x.src.y);
            return monthNames[index];
        },
        xLabels: "month",
        labels: ['Series A'],
        lineColors: ['#a0d0e0', '#3dbeee'],
        hideHover: 'auto'

    });
    }
    
});


/********************************************/
/************* MODAL DELETE ****************/
/******************************************/
        function openModal(ID, name) {
            $(".modal-body").html("Voulez vous Supprimez " + name + ID);
            $("#myModal").modal('show');
            $("#supprimer").click(function () {
                window.location.href = "/Crm_ReclamationClient/DeleteConfirmed?id=" + ID
            });
        }