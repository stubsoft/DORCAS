@model DorcasClub.Memberships

@{
    ViewBag.Title = "Modification";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="content-header-left col-md-12 col-12 mb-2 breadcrumb-new card">
            <div class="row no-gutters">
                <div class="col-md-6"><span style="padding-top: 9px; font-size: 16px; " class="content-header-title mb-0 d-inline-block">Modifier Adhérent @Model.name_Members</span></div>
                <div class="col-md-4" style=" padding-top: 8px;">
                    <div class="row breadcrumbs-top d-inline-block">
                        <div class="breadcrumb-wrapper">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="/">Tableau de Bord</a>
                                </li>
                                <li class="breadcrumb-item">
                                    <a href="/Memberships">Adhérents</a>
                                </li>
                                <li class="breadcrumb-item active">
                                    Modification
                                </li>
                            </ol>
                        </div>
                    </div>
                </div>

            </div>


        </div>

    </div>

    @using (Html.BeginForm("Edit", "Memberships", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Information Genérale</h4>
                        <div class="heading-elements">
                            <button type="submit" class="btn btn-success pull-right" style=" margin-top: -12px;"><i class="la la-save"></i> Enregistrer</button>

                        </div>
                        <hr />
                    </div>
                    <div class="card-body row">
                        <div class="col-md-3">
                            <h4>Image</h4>
                            <hr />
                            <input type="file" name="EditimageElement" id="EditimageElement" onchange="fileCheck(this);" />
                            <hr />
                            <img src="/Memberships/RetrieveImage/@Model.idMembers" alt="" height=200 width=200 />
                        </div>
                        <div class="col-md-3">
                            <fieldset class="border p-2 h-100">
                                <legend class="w-auto">Personnel</legend>

                                <div class="form-group row no-gutters">
                                    <label for="nameElement" class="col-sm-4 col-form-label"> Nom Adhérent </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.name_Members, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.name_Members, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group  row no-gutters">
                                    <label for="Lipide" class="col-sm-4 col-form-label"> CIN </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.CIN_Members, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CIN_Members, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group  row no-gutters">
                                    <label for="Lipide" class="col-sm-4 col-form-label"> Poids </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.Wieght, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Wieght, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group  row no-gutters">
                                    <label for="Lipide" class="col-sm-4 col-form-label"> Taille </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.Taille, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Taille, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="form-group row no-gutters">
                <label for="description" class="col-sm-4 col-form-label"> Description </label>
                <div class="col-sm-12">
                    @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>*@
</fieldset>
                        </div>
                        <div class="col-md-3">
                            <fieldset class="border p-2 h-100">
                                <legend class="w-auto">Contact</legend>
                                <div class="form-group row no-gutters">
                                    <label for="idElement" class="col-sm-4 col-form-label"> Mobile</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="form-group row no-gutters">
                                    <label for="DescriptionTache" class="col-sm-4 pt-0  col-form-label"> Fixe </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })


                                    </div>

                                </div>
                                <div class="form-group row no-gutters">
                                    <label for="DescriptionTache" class="col-sm-4 pt-0  col-form-label"> Email </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })


                                    </div>

                                </div>
                                <div class="form-group row no-gutters">
                                    <label for="Proteine" class="col-sm-4 col-form-label"> Adress </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.adress_Members, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.adress_Members, "", new { @class = "text-danger" })
                                    </div>
                                </div>

</fieldset>
</div>
                        <div class="col-md-3">
                           
                            <fieldset class="border p-2 h-100">
                                <legend class="w-auto">Inscription</legend>


                                <div class="form-group  row no-gutters">
                                    <label for="Kj" class="col-sm-6 col-form-label"> Type d'inscription </label>
                                    <div class="col-sm-6">
                                        <select name=@Html.NameFor(model => model.membershipType) id=@Html.IdFor(model => model.membershipType) class="selectize-control input-selectize multi">
                                            <option value="">@Model.membershipType</option>
                                            <option value="Local">Local</option>
                                            <option value="Web">Web</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group row no-gutters">
                                    <label for="insertion_date" class="col-sm-4 col-form-label"> Date Début </label>
                                    <div class="col-sm-8">
                                        <input type="date" value="@ViewData["d1"]" name="DateDu" id="DateDu" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.DateDu, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row no-gutters">
                                    <label for="DateAu" class="col-sm-4 col-form-label"> Date Fin </label>
                                    <div class="col-sm-8">
                                        <input type="date" value="@ViewData["d2"]" name="DateAu" id="DateAu" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.DateAu, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div class="form-group row no-gutters">
                                    <label for="login" class="col-sm-4 col-form-label"> Login </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.login, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.login, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group  row no-gutters">

                                    <label for="Lipide" class="col-sm-4 col-form-label"> Mot de Passe </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </fieldset>
                        </div>

                    </div>
                </div>

            </div>
        </div>
        @Html.HiddenFor(model => model.idMembers, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.imageelement, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.imagephysique, new { htmlAttributes = new { @class = "form-control" } })

    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    function fileCheck(obj) {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
        }
    }
    </script>
}
